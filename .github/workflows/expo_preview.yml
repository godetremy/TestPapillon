name: expo_preview.yml
on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  preview:
    name: Preview with ExpoGo
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Expo files
        uses: actions/cache@v3
        with:
          path: |
            .expo
            .expo-shared
          key: ${{ runner.os }}-expo-${{ hashFiles('package.json') }}
          restore-keys: |
           ${{ runner.os }}-expo-

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm ci
        if: steps.cache_node_modules.outputs.cache-hit != 'true'

      - name: Create dist folder
        run: |
          mkdir dist
          mkdir dist/expo

      - name: Export AppEntry
        run: npx expo export --dev --platform ios --output-dir build_ios & npx expo export --dev --platform android --output-dir build_android

      - name: Move iOS AppEntry
        run: |
          cd build_ios
          PATH_TO_ENTRY="$(find . | grep 'AppEntry.js')"
          mv $PATH_TO_ENTRY ./../dist/expo/AppEntry_ios.js
          cd ..

      - name: Move Android AppEntry
        run: |
          cd build_android
          PATH_TO_ENTRY="$(find . | grep 'AppEntry.js')"
          mv $PATH_TO_ENTRY ./../dist/expo/AppEntry_android.js
          cd ..

      - name: Move assets
        run: |
          mv build_ios/assets dist/assets

      - name: Copy app.json
        run: cp app.json dist/app.json

      - name: Cleanup
        run: rm -rf build_ios build_android

      - name: Cloning the PR repository
        run: |
          git clone "https://github.com/godetremy/test.git" pr_repo

      - name: Transfering the build to PR repository
        run: |
          mkdir pr_repo/${{ github.event.pull_request.number }}
          cp -r dist/* pr_repo/${{ github.event.pull_request.number }}
          cd pr_repo
          git config --global user.email "godetremy@free.fr"
          git config --global user.name "Godet RÃ©my"
          git add .
          git commit -m "Build PR#${{ github.event.pull_request.number }}"
          git push https://${{ secrets.GH_TOKEN }}@github.com/godetremy/test.git
          cd ..

      - name: Commenting on PR
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const iosQrCodeUrl = "https://github.com/${{ github.repository }}/suites/${{ github.run_id }}/artifacts/${{ steps.uploading_qr_code.outputs.artifact_id }}/qr/qr_ios.png";
            const androidQrCodeUrl = "https://github.com/${{ github.repository }}/suites/${{ github.run_id }}/artifacts/${{ steps.uploading_qr_code.outputs.artifact_id }}/qr/qr_android.png";
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              <h1 align="center">ðŸŽ‰ La preview est prÃªte ðŸŽ‰</h1>
              
              ![iOS](https://raw.githubusercontent.com/PapillonApp/chat-themes/refs/heads/main/.github/assets/ios_light.png#gh-light-mode-only)
              ![iOS](https://raw.githubusercontent.com/PapillonApp/chat-themes/refs/heads/main/.github/assets/ios_dark.png#gh-dark-mode-only)
              
              <img
              src="http://api.qrserver.com/v1/create-qr-code/?data=exp://expo.godetremy.com/${{ github.event.pull_request.number }}?platform=ios&size=150x150&margin=5"
              align="left"
              />
              Pour exÃ©cuter cette preview sur ton iPhone, tu auras besoin de l'application ExpoGo.
              Une fois installÃ©e, scanne ce QR code Ã  l'aide de l'appareil photo ou entre cette url dans Expo :
              \`exp://expo.godetremy.com/${{ github.event.pull_request.number }}?platform=ios\`
              
              <br><br><br>
              <hr>
              
              ![Android](https://raw.githubusercontent.com/PapillonApp/chat-themes/refs/heads/main/.github/assets/android_light.png#gh-light-mode-only)
              ![Android](https://raw.githubusercontent.com/PapillonApp/chat-themes/refs/heads/main/.github/assets/android_dark.png#gh-dark-mode-only)
              
              <img
              src="http://api.qrserver.com/v1/create-qr-code/?data=exp://expo.godetremy.com/${{ github.event.pull_request.number }}?platform=android&size=150x150&margin=5"
              align="left"
              />
              Pour exÃ©cuter cette preview sur ton tÃ©lÃ©phone, tu auras besoin de l'application ExpoGo.
              TÃ©lÃ©charge-la depuis le Google PlayStore, puis une fois installÃ©e, scanne ce QR code Ã  l'aide du scanneur de QR code
              de ton mobile ou entre cette url dans Expo :
              \`exp://expo.godetremy.com/${{ github.event.pull_request.number }}?platform=android\`
              
              <br>
              `
            });
