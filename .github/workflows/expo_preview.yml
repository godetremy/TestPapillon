name: expo_preview.yml
on: pull_request

jobs:
  preview:
    name: Preview with ExpoGo
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm i

      - name: Create dist folder
        run: |
          mkdir dist
          mkdir dist/expo

      - name: Export for ios
        run: npx expo export --dev --platform ios --output-dir build_ios

      - name: Move iOS AppEntry
        run: |
          cd build_ios
          PATH_TO_ENTRY="$(find . | grep 'AppEntry.js')"
          mv $PATH_TO_ENTRY ./../dist/expo/AppEntry_ios.js
          echo $PATH_TO_ENTRY
          cd ..

      - name: Export for android
        run: npx expo export --dev --platform android --output-dir build_android

      - name: Move Android AppEntry
        run: |
          cd build_android
          PATH_TO_ENTRY="$(find . | grep 'AppEntry.js')"
          mv $PATH_TO_ENTRY ./../dist/expo/AppEntry_android.js
          echo $PATH_TO_ENTRY
          cd ..

      - name: Move assets
        run: |
          cd build_ios
          mv assets ./../dist/assets
          cd ..

      - name: Copy app.json
        run: cp app.json dist/app.json

      - name: Cleanup
        run: rm -rf build_ios build_android

      - name : Cloning the PR repository
        run: |
          git clone "https://github.com/godetremy/test.git" pr_repo

      - name: Transfering the build to PR repository
        run: |
          mkdir pr_repo/${{ github.event.pull_request.number }}
          cp -r dist/* pr_repo/${{ github.event.pull_request.number }}
          cd pr_repo
          git config --global user.email "godetremy@free.fr"
          git config --global user.name "Godet RÃ©my"
          git add .
          git commit -m "Build PR#${{ github.event.pull_request.number }}"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/godetremy/test.git
          cd ..

      - name: Generating QR code
        run: |
            mkdir -p qr
            curl -o qr/qr_ios.png "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=exp://expo.godetremy.com/${{ github.event.pull_request.number }}?platform=ios"
            curl -o qr/qr_android.png "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=exp://expo.godetremy.com/${{ github.event.pull_request.number }}?platform=android"

      - name: Uploading QR code
        uses: actions/upload-artifact@v4
        with:
          name: qr_codes
          path: qr

      - name: Commenting on PR
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const iosQrCodeUrl = "https://github.com/${{ github.repository }}/suites/${{ github.run_id }}/artifacts/${{ steps.uploading_qr_code.outputs.artifact_id }}/qr/qr_ios.png";
            const androidQrCodeUrl = "https://github.com/${{ github.repository }}/suites/${{ github.run_id }}/artifacts/${{ steps.uploading_qr_code.outputs.artifact_id }}/qr/qr_android.png";
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Preview is ready! [iOS QR code](${iosQrCodeUrl}) [Android QR code](${androidQrCodeUrl})`
            });
